var searchIndex = {};
searchIndex["gravatar"] = {"doc":"`rust-gravatar` is a small Rust library that generates Gravatar image URLs based on the official Gravatar specification.","items":[[3,"Gravatar","gravatar","Representation of a single Gravatar image URL.",null,null],[12,"email","","The email of the user whose Gravatar you are trying to get.",0,null],[12,"size","","The desired image size. If `None` is provided, then no size is passed to Gravatar, which will then use a default of 80px by 80px. Gravatar will only provide images between 1px and 2048px by size.",0,null],[12,"default","","The default image to use if the user does not have a Gravatar. If `None` is provided, then Gravatar returns a blue Gravatar logo. The default image can be either a URL or one of Gravatar's premade defaults.",0,null],[12,"force_default","","If force_default is set to true, then Gravatar will always return the specified default image, whether or not the user's email exists.",0,null],[12,"rating","","The maximum rating level for which Gravatar will show the user's image. If `None` is provided, then Gravatar will only deliver \"G\"-rated images by default. If an image is at a higher rating level than the requested one, the default image is returned instead.",0,null],[12,"ssl","","If true, Gravatar's secure URL (https://secure.gravatar.com/avatar/...) is used. Otherwise, the non-SSL website is used instead (http://www.gravatar.com/avatar/...).",0,null],[4,"Default","","The default image to display if the user's email does not have a Gravatar.",null,null],[13,"Url","","The URL of an image file to display as the default.",1,null],[13,"Http404","","Instead of loading an image, the Gravatar URL will return an HTTP 404 (File Not Found) response if the email is not found.",1,null],[13,"Blank","","A transparent PNG image.",1,null],[13,"MysteryMan","","A simple, cartoon-style silhouetted outline of a person that does not vary by email hash.",1,null],[13,"Identicon","","A geometric pattern based on the email hash.",1,null],[13,"MonsterId","","A \"monster\" with different colors, faces, etc. that are generated by the email hash.",1,null],[13,"Wavatar","","A face with different features and backgrounds, generated by the email hash.",1,null],[13,"Retro","","An 8-bit arcade-style pixelated face that is generated by the email hash.",1,null],[4,"Rating","","The maximum rating level for which Gravatar will show the user's image instead of the specified default.",null,null],[13,"G","","Show \"G\"-rated images only.",2,null],[13,"Pg","","Show \"PG\"-rated images or lower only.",2,null],[13,"R","","Show \"R\"-rated images or lower only.",2,null],[13,"X","","Show all images, up to and including \"X\"-rated ones.",2,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"default"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rating"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"gravatar"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new Gravatar with the given email and default values for the other parameters.",0,{"inputs":[{"name":"str"}],"output":{"name":"gravatar"}}],[11,"image_url","","Returns the image URL of the user's Gravatar with all specified parameters.",0,{"inputs":[{"name":"self"}],"output":{"name":"string"}}]],"paths":[[3,"Gravatar"],[4,"Default"],[4,"Rating"]]};
initSearch(searchIndex);
